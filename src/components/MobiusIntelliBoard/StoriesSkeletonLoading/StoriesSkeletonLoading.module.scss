@use "../../../mixin.module.scss";
@import "../../../mixin.module.scss";

#lightMode {
  background-color: $lightBackGround;
  .loading {
    > div {
      background-color: $lightSurface;
      border-right: 0.1vw solid $lightBackGround;
      span {
        background-color: $lightBackGround;
      }

      .content {
        background-color: $lightGreyBg;
        .card {
          background-color: $lightSurface;
        }
      }
    }
  }
  .skeletonLoading {
  display: inline-block;
  position: relative;
  overflow: hidden;
  background-color: $lightGreyBg;
}
.skeletonLoading::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: translateX(-100%);
  background-image: linear-gradient(
    90deg,
    rgba(205, 205, 205, 0) 0,
    rgba(185, 185, 185, 0.2) 20%,
    rgba(217, 217, 217, 0.6) 60%,
    rgba(212, 212, 212, 0.208)
  );
  animation: shimmer 1.6s infinite;
  content: "";
}
}

.mainContainer {
  width: 100%;
  height: 100%;
  background-color: $surface;
  @include mixin.flex-container(column, flex-start, flex-start, 0.2vw);
  border-radius: 0.2rem;
  > p {
    @media only screen and (max-width: 768px) {
      width: 30%;
      height: 10%;
    }
    width: 20%;
    height: 12%;
    border-radius: 0.2rem;
    margin: clamp(0.2225rem, 0.0003rem + 0.2777vw, 0.666875rem);
  }
  .loading {
    width: 100%;
    height: 87%;
    @include mixin.flex-container(row, flex-start, flex-start, 0.2vw);
    overflow: scroll;
    > div {
      @media only screen and (max-width: 768px) {
        min-width: calc(100% / 2);
      }
      width: calc(100% / 3);
      height: 100%;
      background-color: $surface;
      padding: clamp(0.2225rem, 0.0003rem + 0.2777vw, 0.666875rem);
      border-right: 0.1vw solid $background;
      span {
        width: 100%;
        height: 10%;
        background-color: $background;
        padding: clamp(0.5rem, 0rem + 0.625vw, 1.5rem);
        @include mixin.flex-container(column, center, center);
        border-radius: 0.2rem;
        > p {
          width: 100%;
          height: 2vh;
          border-radius: 0.1rem;
        }
      }

      .content {
        width: 100%;
        height: 90%;
        overflow: scroll;
        @include mixin.flex-container(column, flex-start, flex-start, 1vw);
        padding: clamp(0.555625rem, 0rem + 0.6945vw, 1.666875rem);
        .card {
          @media only screen and (max-width: 768px) {
            min-height: 15vh;
          }
          width: 100%;
          min-height: 20vh;
          border-radius: 0.2rem;
          background-color: $background;
          padding: clamp(0.2225rem, 0.0003rem + 0.2777vw, 0.666875rem);
          @include mixin.flex-container(column, flex-start, flex-start, 0.5rem);
          p {
            border-radius: 0.2rem;
            &:first-child {
              @media only screen and (max-width: 768px) {
                height: 20%;
              }
              width: 100%;
              height: 15%;
              margin-top: clamp(0.2225rem, 0.0003rem + 0.2777vw, 0.666875rem);
            }
            &:nth-child(2),
            &:nth-child(3) {
              @media only screen and (max-width: 768px) {
                height: 15%;
              }
              width: 70%;
              height: 10%;
            }
            &:last-child {
              @media only screen and (max-width: 768px) {
                height: 10%;
              }
              width: 80%;
              height: 10%;
            }
          }
        }
      }
    }
  }
}

.skeletonLoading {
  display: inline-block;
  position: relative;
  overflow: hidden;
  background-color: $background;
}
.skeletonLoading::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: translateX(-100%);
  background-image: linear-gradient(
    90deg,
    rgba(41, 41, 41, 0) 0,
    rgba(48, 48, 48, 0.2) 20%,
    rgba(57, 57, 57, 0.6) 60%,
    rgba(34, 34, 34, 0)
  );
  animation: shimmer 1.6s infinite;
  content: "";
}

@keyframes shimmer {
  100% {
    transform: translateX(100%);
  }
}
